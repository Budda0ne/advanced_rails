env:
  RUBY_VERSION: 2.5
  POSTGRESQL_USERNAME: postgres
  POSTGRESQL_PASSWORD: postgres
  POSTGRES_DB: postgres

name: Rails tests
on: [push,pull_request]
jobs:
  rubocop-test:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install Rubocop
        run: gem install rubocop
      - name: Install rubocop-performance
        run: gem install rubocop-performance
      - name: Install rubocop-rails
        run: gem install rubocop-rails
      - name: Install rubocop-rspec
        run: gem install rubocop-rspec
      - name: Check code
        run: rubocop
  rspec-test:
    name: Rspec
    needs: rubocop-test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
        - 5432:5432
        env:
          POSTGRES_USER: ${{ env.POSTGRESQL_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - run: npm install
      - uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install
      - name: Get Yarn Cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Node Modules
        id: node-modules-cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache Gems
        id: gem-cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Cache Assets
        id: assets-cache
        uses: actions/cache@v1
        with:
          path: public/packs-test
          key: ${{ runner.os }}-assets-${{ steps.extract_branch.outputs.branch }}
          restore-keys: |
            ${{ runner.os }}-assets-
      - name: Install postgres client
        run: sudo apt-get install libpq-dev
      - name: Install dependencies
        run: |
          gem install bundler:1.17.3
          bundler install
      - name: Setup Database
        run: |
          cp config/database.yml.github-actions config/database.yml
          bundler exec rails db:create
          bundle exec rake db:schema:load
        env:
          RAILS_ENV: test
          POSTGRES_USER: ${{ env.POSTGRESQL_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      - name: Yarn Install
        run: bin/rails yarn:install
      - name: Compile Webpacker
        shell: bash
        run: |
          if [[ ! -d public/packs-test ]]; then
            bundle exec rails webpacker:compile
          else
            echo "No need to compile assets."
          fi
      - name: Run tests
        run: COVERAGE=true bundle exec rspec  --require rails_helper
        env:
          RAILS_ENV: test
          POSTGRES_USER: ${{ env.POSTGRESQL_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      - name: Upload coverage results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage report
          path: coverage
